plugins
{
id 'org.springframework.boot' version '2.7.0' 
id 'io.spring.dependency-management' version '1.0.11.RELEASE'
id 'java'
id 'eclipse'
id 'idea'
id 'war'
	id 'maven-publish'
}

group = 'com.ibm.cicsdev.springboot'
archivesBaseName='cics-java-liberty-springboot-jdbc'
version = '0.1.0'


// If in Eclipse, add Javadoc to the local project classpath
eclipse 
{
    classpath 
    {
        downloadJavadoc = true
    }
}


repositories 
{
    mavenCentral()
}


java
{
    toolchain
    {
        languageVersion = JavaLanguageVersion.of(java_version)
        vendor = JvmVendorSpec.IBM
        implementation = JvmImplementation.J9
    }
}


dependencies 
{
    // Spring Boot web starter dependency
    implementation("org.springframework.boot:spring-boot-starter-web")

    // Don't include TomCat in the runtime build, but do put it in WEB-INF so it can be run standalone a well as embedded
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")     

    // Spring JDBC Support    
    implementation("org.springframework.boot:spring-boot-starter-data-jdbc")   

}



publishing {
    publications {
    	// Publication for JCICS
        maven(MavenPublication) {
            groupId "${group}"
            version "${version}"
            artifactId "${archivesBaseName}" 
            artifact bootWar
        }
    }
    
    // Configure the Maven repository to publish to somewhere which is configurable
    // with environment variables from outside gradle.
    //
    // For example:
    //   gradle build publish \
    //   -Ppublish_repo_releases_url="file://my-folder" \
    //   -Ppublish_repo_releases_name="my-maven-repo"
    //
    repositories {
        maven {
            url = "${publish_repo_releases_url}/${publish_repo_releases_name}"
        }
    }

}
